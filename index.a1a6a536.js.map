{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js"],"sourcesContent":["\"use strict\";\nvar $a5fd07fa01589658$exports = {};\n\"use strict\";\nclass $a5fd07fa01589658$var$Game {\n    static FIELD_SIZE = 4;\n    static STATUS = {\n        idle: \"idle\",\n        playing: \"playing\",\n        win: \"win\",\n        lose: \"lose\"\n    };\n    static INITIAL_STATE = Array($a5fd07fa01589658$var$Game.FIELD_SIZE).fill(Array($a5fd07fa01589658$var$Game.FIELD_SIZE).fill(0));\n    constructor(initialState = $a5fd07fa01589658$var$Game.INITIAL_STATE.map((row)=>[\n            ...row\n        ])){\n        this.status = $a5fd07fa01589658$var$Game.STATUS.idle;\n        this.board = initialState;\n        this.score = 0;\n    }\n    moveLeft() {\n        this.board = this.board.map((row)=>this.#merge(row));\n        this.#addRandomTile();\n    }\n    moveRight() {\n        this.board = this.board.map((row)=>this.#merge(row.reverse()).reverse());\n        this.#addRandomTile();\n    }\n    moveUp() {\n        this.board = this.#transpose(this.board).map((row)=>this.#merge(row));\n        this.board = this.#transpose(this.board);\n        this.#addRandomTile();\n    }\n    moveDown() {\n        this.board = this.#transpose(this.board).map((row)=>{\n            return this.#merge(row.reverse()).reverse();\n        });\n        this.board = this.#transpose(this.board);\n        this.#addRandomTile();\n    }\n    getScore() {\n        return this.score;\n    }\n    getState() {\n        return this.board;\n    }\n    getStatus() {\n        if (this.board.flat().includes(2048)) return $a5fd07fa01589658$var$Game.STATUS.win;\n        if (!this.board.flat().includes(0) && !this.#canMove()) return $a5fd07fa01589658$var$Game.STATUS.lose;\n        return this.status;\n    }\n    start() {\n        this.status = $a5fd07fa01589658$var$Game.STATUS.playing;\n        this.#addRandomTile();\n        this.#addRandomTile();\n    }\n    restart() {\n        this.board = $a5fd07fa01589658$var$Game.INITIAL_STATE.map((row)=>[\n                ...row\n            ]);\n        this.status = $a5fd07fa01589658$var$Game.STATUS.idle;\n        this.score = 0;\n        this.start();\n    }\n    #merge(row) {\n        // eslint-disable-next-line no-param-reassign\n        row = row.filter((val)=>val);\n        for(let i = 0; i < row.length - 1; i++)if (row[i] === row[i + 1]) {\n            row[i] *= 2;\n            row[i + 1] = 0;\n            this.score += row[i];\n        }\n        return row.filter((val)=>val).concat(Array($a5fd07fa01589658$var$Game.FIELD_SIZE - row.filter((val)=>val).length).fill(0));\n    }\n    #transpose(matrix) {\n        return matrix[0].map((_, colIndex)=>matrix.map((row)=>row[colIndex]));\n    }\n    #addRandomTile() {\n        const emptyTiles = this.board.flatMap((row, i)=>{\n            return row.map((val, j)=>val === 0 ? [\n                    i,\n                    j\n                ] : null).filter((val)=>val);\n        });\n        if (emptyTiles.length > 0) {\n            const [i, j] = emptyTiles[Math.floor(Math.random() * emptyTiles.length)];\n            this.board[i][j] = Math.random() < 0.9 ? 2 : 4;\n        }\n    }\n    #canMove() {\n        for(let i = 0; i < this.board.length; i++)for(let j = 0; j < this.board[i].length; j++){\n            if (i < this.board.length - 1 && this.board[i][j] === this.board[i + 1][j]) return true;\n            if (j < this.board[i].length - 1 && this.board[i][j] === this.board[i][j + 1]) return true;\n        }\n        return false;\n    }\n}\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\nconst $09e991522ca7e64e$var$game = new $a5fd07fa01589658$exports();\nconst $09e991522ca7e64e$var$cells = document.querySelectorAll(\".field-cell\");\nconst $09e991522ca7e64e$var$startButton = document.querySelector(\".button.start\");\nconst $09e991522ca7e64e$var$updateField = ()=>{\n    const state = $09e991522ca7e64e$var$game.getState();\n    $09e991522ca7e64e$var$cells.forEach((cell, i)=>{\n        const row = Math.floor(i / 4);\n        const col = i % 4;\n        cell.className = \"field-cell\";\n        cell.textContent = state[row][col] || \"\";\n        if (state[row][col]) cell.classList.add(`field-cell--${state[row][col]}`);\n    });\n    const gameStatus = $09e991522ca7e64e$var$game.getStatus();\n    document.querySelector(\".message-win\").classList.toggle(\"hidden\", gameStatus !== \"win\");\n    document.querySelector(\".message-lose\").classList.toggle(\"hidden\", gameStatus !== \"lose\");\n};\nconst $09e991522ca7e64e$var$updateScore = ()=>{\n    document.querySelector(\".game-score\").textContent = $09e991522ca7e64e$var$game.getScore();\n};\ndocument.querySelector(\".game-score\").textContent = $09e991522ca7e64e$var$game.getScore();\ndocument.addEventListener(\"keydown\", (e)=>{\n    if ($09e991522ca7e64e$var$game.getStatus() === $a5fd07fa01589658$exports.STATUS.playing) {\n        switch(e.key){\n            case \"ArrowLeft\":\n                $09e991522ca7e64e$var$game.moveLeft();\n                break;\n            case \"ArrowRight\":\n                $09e991522ca7e64e$var$game.moveRight();\n                break;\n            case \"ArrowUp\":\n                $09e991522ca7e64e$var$game.moveUp();\n                break;\n            case \"ArrowDown\":\n                $09e991522ca7e64e$var$game.moveDown();\n                break;\n        }\n        $09e991522ca7e64e$var$updateField();\n        $09e991522ca7e64e$var$updateScore();\n    }\n});\n$09e991522ca7e64e$var$startButton.addEventListener(\"click\", ()=>{\n    if ($09e991522ca7e64e$var$startButton.classList.contains(\"restart\")) $09e991522ca7e64e$var$game.restart();\n    else $09e991522ca7e64e$var$game.start();\n    $09e991522ca7e64e$var$updateField();\n    $09e991522ca7e64e$var$updateScore();\n    document.querySelectorAll(\".message-win, .message-lose, .message-start\").forEach((el)=>el.classList.add(\"hidden\"));\n    $09e991522ca7e64e$var$startButton.textContent = \"Restart\";\n    $09e991522ca7e64e$var$startButton.className = \"button restart\";\n});\n\n\n//# sourceMappingURL=index.a1a6a536.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst cells = document.querySelectorAll('.field-cell');\nconst startButton = document.querySelector('.button.start');\n\nconst updateField = () => {\n  const state = game.getState();\n\n  cells.forEach((cell, i) => {\n    const row = Math.floor(i / 4);\n    const col = i % 4;\n\n    cell.className = 'field-cell';\n    cell.textContent = state[row][col] || '';\n\n    if (state[row][col]) {\n      cell.classList.add(`field-cell--${state[row][col]}`);\n    }\n  });\n\n  const gameStatus = game.getStatus();\n\n  document\n    .querySelector('.message-win')\n    .classList.toggle('hidden', gameStatus !== 'win');\n\n  document\n    .querySelector('.message-lose')\n    .classList.toggle('hidden', gameStatus !== 'lose');\n};\n\nconst updateScore = () => {\n  document.querySelector('.game-score').textContent = game.getScore();\n};\n\ndocument.querySelector('.game-score').textContent = game.getScore();\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.getStatus() === Game.STATUS.playing) {\n    switch (e.key) {\n      case 'ArrowLeft':\n        game.moveLeft();\n        break;\n\n      case 'ArrowRight':\n        game.moveRight();\n        break;\n\n      case 'ArrowUp':\n        game.moveUp();\n        break;\n\n      case 'ArrowDown':\n        game.moveDown();\n        break;\n    }\n\n    updateField();\n    updateScore();\n  }\n});\n\nstartButton.addEventListener('click', () => {\n  if (startButton.classList.contains('restart')) {\n    game.restart();\n  } else {\n    game.start();\n  }\n\n  updateField();\n  updateScore();\n\n  document\n    .querySelectorAll('.message-win, .message-lose, .message-start')\n    .forEach((el) => el.classList.add('hidden'));\n\n  startButton.textContent = 'Restart';\n  startButton.className = 'button restart';\n});\n","'use strict';\n\nclass Game {\n  static FIELD_SIZE = 4;\n\n  static STATUS = {\n    idle: 'idle',\n    playing: 'playing',\n    win: 'win',\n    lose: 'lose',\n  };\n\n  static INITIAL_STATE = Array(Game.FIELD_SIZE).fill(\n    Array(Game.FIELD_SIZE).fill(0),\n  );\n\n  constructor(initialState = Game.INITIAL_STATE.map((row) => [...row])) {\n    this.status = Game.STATUS.idle;\n    this.board = initialState;\n    this.score = 0;\n  }\n\n  moveLeft() {\n    this.board = this.board.map((row) => this.#merge(row));\n\n    this.#addRandomTile();\n  }\n\n  moveRight() {\n    this.board = this.board.map((row) => this.#merge(row.reverse()).reverse());\n\n    this.#addRandomTile();\n  }\n\n  moveUp() {\n    this.board = this.#transpose(this.board).map((row) => this.#merge(row));\n\n    this.board = this.#transpose(this.board);\n\n    this.#addRandomTile();\n  }\n\n  moveDown() {\n    this.board = this.#transpose(this.board).map((row) => {\n      return this.#merge(row.reverse()).reverse();\n    });\n\n    this.board = this.#transpose(this.board);\n\n    this.#addRandomTile();\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getStatus() {\n    if (this.board.flat().includes(2048)) {\n      return Game.STATUS.win;\n    }\n\n    if (!this.board.flat().includes(0) && !this.#canMove()) {\n      return Game.STATUS.lose;\n    }\n\n    return this.status;\n  }\n\n  start() {\n    this.status = Game.STATUS.playing;\n\n    this.#addRandomTile();\n    this.#addRandomTile();\n  }\n\n  restart() {\n    this.board = Game.INITIAL_STATE.map((row) => [...row]);\n    this.status = Game.STATUS.idle;\n    this.score = 0;\n\n    this.start();\n  }\n\n  #merge(row) {\n    // eslint-disable-next-line no-param-reassign\n    row = row.filter((val) => val);\n\n    for (let i = 0; i < row.length - 1; i++) {\n      if (row[i] === row[i + 1]) {\n        row[i] *= 2;\n        row[i + 1] = 0;\n\n        this.score += row[i];\n      }\n    }\n\n    return row\n      .filter((val) => val)\n      .concat(Array(Game.FIELD_SIZE - row.filter((val) => val).length).fill(0));\n  }\n\n  #transpose(matrix) {\n    return matrix[0].map((_, colIndex) => matrix.map((row) => row[colIndex]));\n  }\n\n  #addRandomTile() {\n    const emptyTiles = this.board.flatMap((row, i) => {\n      return row\n        .map((val, j) => (val === 0 ? [i, j] : null))\n        .filter((val) => val);\n    });\n\n    if (emptyTiles.length > 0) {\n      const [i, j] = emptyTiles[Math.floor(Math.random() * emptyTiles.length)];\n\n      this.board[i][j] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  #canMove() {\n    for (let i = 0; i < this.board.length; i++) {\n      for (let j = 0; j < this.board[i].length; j++) {\n        if (\n          i < this.board.length - 1 &&\n          this.board[i][j] === this.board[i + 1][j]\n        ) {\n          return true;\n        }\n\n        if (\n          j < this.board[i].length - 1 &&\n          this.board[i][j] === this.board[i][j + 1]\n        ) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = Game;\n"],"names":["$a5fd07fa01589658$exports","$a5fd07fa01589658$var$Game","FIELD_SIZE","STATUS","idle","playing","win","lose","INITIAL_STATE","Array","fill","constructor","initialState","map","row","status","board","score","moveLeft","merge","addRandomTile","moveRight","reverse","moveUp","transpose","moveDown","getScore","getState","getStatus","flat","includes","canMove","start","restart","filter","val","i","length","concat","matrix","_","colIndex","emptyTiles","flatMap","j","Math","floor","random","$09e991522ca7e64e$var$game","$09e991522ca7e64e$var$cells","document","querySelectorAll","$09e991522ca7e64e$var$startButton","querySelector","$09e991522ca7e64e$var$updateField","state","forEach","cell","col","className","textContent","classList","add","gameStatus","toggle","$09e991522ca7e64e$var$updateScore","addEventListener","e","key","contains","el"],"version":3,"file":"index.a1a6a536.js.map"}